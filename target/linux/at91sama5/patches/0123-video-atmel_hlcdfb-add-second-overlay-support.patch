From f475379a00008c713edf8b0c49976071067bb8d8 Mon Sep 17 00:00:00 2001
From: Ludovic Desroches <ludovic.desroches@atmel.com>
Date: Mon, 29 Oct 2012 11:14:31 +0100
Subject: [PATCH 123/319] video: atmel_hlcdfb: add second overlay support

New LCD Controller can support a second overlay.

Signed-off-by: Ludovic Desroches <ludovic.desroches@atmel.com>
---
 arch/arm/mach-at91/include/mach/atmel_hlcdc_ovl.h |  293 +++++++++++----------
 drivers/video/atmel_hlcdfb.c                      |   41 +--
 2 files changed, 168 insertions(+), 166 deletions(-)

diff --git a/arch/arm/mach-at91/include/mach/atmel_hlcdc_ovl.h b/arch/arm/mach-at91/include/mach/atmel_hlcdc_ovl.h
index 4416403..eb8d83d 100644
--- a/arch/arm/mach-at91/include/mach/atmel_hlcdc_ovl.h
+++ b/arch/arm/mach-at91/include/mach/atmel_hlcdc_ovl.h
@@ -6,151 +6,152 @@
  * So, these defines start at 0x0. The manual will list them at 0x100.
  */
 
-#define ATMEL_LCDC_OVRCHER1	0x0000
-#define LCDC_OVRCHER1_CHEN		(0x1 << 0)
-#define LCDC_OVRCHER1_UPDATEEN		(0x1 << 1)
-#define LCDC_OVRCHER1_A2QEN		(0x1 << 2)
-
-#define ATMEL_LCDC_OVRCHDR1	0x0004
-#define LCDC_OVRCHDR1_CHDIS		(0x1 << 0)
-#define LCDC_OVRCHDR1_CHRST		(0x1 << 8)
-
-#define ATMEL_LCDC_OVRCHSR1	0x0008
-#define LCDC_OVRCHSR1_CHSR		(0x1 << 0)
-#define LCDC_OVRCHSR1_UPDATESR		(0x1 << 1)
-#define LCDC_OVRCHSR1_A2QSR		(0x1 << 2)
-
-#define ATMEL_LCDC_OVRIER1	0x000C
-#define LCDC_OVRIER1_DMA		(0x1 << 2)
-#define LCDC_OVRIER1_DSCR		(0x1 << 3)
-#define LCDC_OVRIER1_ADD		(0x1 << 4)
-#define LCDC_OVRIER1_DONE		(0x1 << 5)
-#define LCDC_OVRIER1_OVR		(0x1 << 6)
-
-#define ATMEL_LCDC_OVRIDR1	0x0010
-#define LCDC_OVRIDR1_DMA		(0x1 << 2)
-#define LCDC_OVRIDR1_DSCR		(0x1 << 3)
-#define LCDC_OVRIDR1_ADD		(0x1 << 4)
-#define LCDC_OVRIDR1_DONE		(0x1 << 5)
-#define LCDC_OVRIDR1_OVR		(0x1 << 6)
-
-#define ATMEL_LCDC_OVRIMR1	0x0014
-#define LCDC_OVRIMR1_DMA		(0x1 << 2)
-#define LCDC_OVRIMR1_DSCR		(0x1 << 3)
-#define LCDC_OVRIMR1_ADD		(0x1 << 4)
-#define LCDC_OVRIMR1_DONE		(0x1 << 5)
-#define LCDC_OVRIMR1_OVR		(0x1 << 6)
-
-#define ATMEL_LCDC_OVRISR1	0x0018
-#define LCDC_OVRISR1_DMA		(0x1 << 2)
-#define LCDC_OVRISR1_DSCR		(0x1 << 3)
-#define LCDC_OVRISR1_ADD		(0x1 << 4)
-#define LCDC_OVRISR1_DONE		(0x1 << 5)
-#define LCDC_OVRISR1_OVR		(0x1 << 6)
-
-#define ATMEL_LCDC_OVRHEAD1	0x001C
-
-#define ATMEL_LCDC_OVRADDR1	0x0020
-
-#define ATMEL_LCDC_OVRCTRL1	0x0024
-#define LCDC_OVRCTRL1_DFETCH		(0x1 << 0)
-#define LCDC_OVRCTRL1_LFETCH		(0x1 << 1)
-#define LCDC_OVRCTRL1_DMAIEN		(0x1 << 2)
-#define LCDC_OVRCTRL1_DSCRIEN		(0x1 << 3)
-#define LCDC_OVRCTRL1_ADDIEN		(0x1 << 4)
-#define LCDC_OVRCTRL1_DONEIEN		(0x1 << 5)
-
-#define ATMEL_LCDC_OVRNEXT1	0x0028
-
-#define ATMEL_LCDC_OVR1CFG0	0x002C
-#define LCDC_OVR1CFG0_BLEN_OFFSET	4
-#define LCDC_OVR1CFG0_BLEN		(0x3 << LCDC_OVR1CFG0_BLEN_OFFSET)
-#define		LCDC_OVR1CFG0_BLEN_AHB_SINGLE		(0x0 << 4)
-#define		LCDC_OVR1CFG0_BLEN_AHB_INCR4		(0x1 << 4)
-#define		LCDC_OVR1CFG0_BLEN_AHB_INCR8		(0x2 << 4)
-#define		LCDC_OVR1CFG0_BLEN_AHB_INCR16		(0x3 << 4)
-#define LCDC_OVR1CFG0_DLBO		(0x1 << 8)
-#define LCDC_OVR1CFG0_ROTDIS		(0x1 << 12)
-#define LCDC_OVR1CFG0_LOCKDIS		(0x1 << 13)
-
-#define ATMEL_LCDC_OVR1CFG1	0x0030
-#define LCDC_OVR1CFG1_CLUTEN		(0x1 << 0)
-#define LCDC_OVR1CFG1_RGBMODE_OFFSET	4
-#define LCDC_OVR1CFG1_RGBMODE		(0xf << LCDC_OVR1CFG1_RGBMODE_OFFSET)
-#define		LCDC_OVR1CFG1_RGBMODE_12BPP_RGB_444	(0x0 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_16BPP_ARGB_4444	(0x1 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_16BPP_RGBA_4444	(0x2 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_16BPP_RGB_565	(0x3 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_16BPP_TRGB_1555	(0x4 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_18BPP_RGB_666	(0x5 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_18BPP_RGB_666_PACKED	(0x6 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_19BPP_TRGB_1666	(0x7 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_19BPP_TRGB_PACKED	(0x8 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_24BPP_RGB_888	(0x9 << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_24BPP_RGB_888_PACKED	(0xA << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_25BPP_TRGB_1888	(0xB << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_32BPP_ARGB_8888	(0xC << 4)
-#define		LCDC_OVR1CFG1_RGBMODE_32BPP_RGBA_8888	(0xD << 4)
-#define LCDC_OVR1CFG1_CLUTMODE_OFFSET	8
-#define LCDC_OVR1CFG1_CLUTMODE		(0x3 << LCDC_OVR1CFG1_CLUTMODE_OFFSET)
-#define		LCDC_OVR1CFG1_CLUTMODE_1BPP		(0x0 << 8)
-#define		LCDC_OVR1CFG1_CLUTMODE_2BPP		(0x1 << 8)
-#define		LCDC_OVR1CFG1_CLUTMODE_4BPP		(0x2 << 8)
-#define		LCDC_OVR1CFG1_CLUTMODE_8BPP		(0x3 << 8)
-
-#define ATMEL_LCDC_OVR1CFG2	0x0034
-#define LCDC_OVR1CFG2_XOFFSET_OFFSET	0
-#define LCDC_OVR1CFG2_XOFFSET		(0x7ff << LCDC_OVR1CFG2_XOFFSET_OFFSET)
-#define LCDC_OVR1CFG2_YOFFSET_OFFSET	16
-#define LCDC_OVR1CFG2_YOFFSET		(0x7ff << LCDC_OVR1CFG2_YOFFSET_OFFSET)
-
-#define ATMEL_LCDC_OVR1CFG3	0x0038
-#define LCDC_OVR1CFG3_XSIZE_OFFSET	0
-#define LCDC_OVR1CFG3_XSIZE		(0x7ff << LCDC_OVR1CFG3_XSIZE_OFFSET)
-#define LCDC_OVR1CFG3_YSIZE_OFFSET	16
-#define LCDC_OVR1CFG3_YSIZE		(0x7ff << LCDC_OVR1CFG3_YSIZE_OFFSET)
-
-#define ATMEL_LCDC_OVR1CFG4	0x003C
-
-#define ATMEL_LCDC_OVR1CFG5	0x0040
-
-#define ATMEL_LCDC_OVR1CFG6	0x0044
-#define LCDC_OVR1CFG6_BDEF_OFFSET	0
-#define LCDC_OVR1CFG6_BDEF		(0xff << LCDC_OVR1CFG6_BDEF_OFFSET)
-#define LCDC_OVR1CFG6_GDEF_OFFSET	8
-#define LCDC_OVR1CFG6_GDEF		(0xff << LCDC_OVR1CFG6_GDEF_OFFSET)
-#define LCDC_OVR1CFG6_RDEF_OFFSET	16
-#define LCDC_OVR1CFG6_RDEF		(0xff << LCDC_OVR1CFG6_RDEF_OFFSET)
-
-#define ATMEL_LCDC_OVR1CFG7	0x0048
-#define LCDC_OVR1CFG7_BKEY_OFFSET	0
-#define LCDC_OVR1CFG7_BKEY		(0xff << LCDC_OVR1CFG7_BKEY_OFFSET)
-#define LCDC_OVR1CFG7_GKEY_OFFSET	8
-#define LCDC_OVR1CFG7_GKEY		(0xff << LCDC_OVR1CFG7_GKEY_OFFST)
-#define LCDC_OVR1CFG7_RKEY_OFFSET	16
-#define LCDC_OVR1CFG7_RKEY		(0xff << LCDC_OVR1CFG7_RKEY_OFFSET)
-
-#define ATMEL_LCDC_OVR1CFG8	0x004C
-#define LCDC_OVR1CFG8_BMASK_OFFSET	0
-#define LCDC_OVR1CFG8_BMASK		(0xff << LCDC_OVR1CFG8_BMASK_OFFSET)
-#define LCDC_OVR1CFG8_GMASK_OFFSET	8
-#define LCDC_OVR1CFG8_GMASK		(0xff << LCDC_OVR1CFG8_GMASK_OFFSET)
-#define LCDC_OVR1CFG8_RMASK_OFFSET	16
-#define LCDC_OVR1CFG8_RMASK		(0xff << LCDC_OVR1CFG8_RMASK_OFFSET)
-
-#define ATMEL_LCDC_OVR1CFG9	0x0050
-#define LCDC_OVR1CFG9_CRKEY		(0x1 << 0)
-#define LCDC_OVR1CFG9_INV		(0x1 << 1)
-#define LCDC_OVR1CFG9_ITER2BL		(0x1 << 2)
-#define LCDC_OVR1CFG9_ITER		(0x1 << 3)
-#define LCDC_OVR1CFG9_REVALPHA		(0x1 << 4)
-#define LCDC_OVR1CFG9_GAEN		(0x1 << 5)
-#define LCDC_OVR1CFG9_LAEN		(0x1 << 6)
-#define LCDC_OVR1CFG9_OVR		(0x1 << 7)
-#define LCDC_OVR1CFG9_DMA		(0x1 << 8)
-#define LCDC_OVR1CFG9_REP		(0x1 << 9)
-#define LCDC_OVR1CFG9_DSTKEY		(0x1 << 10)
-#define LCDC_OVR1CFG9_GA_OFFSET		16
-#define LCDC_OVR1CFG9_GA		(0xff << LCDC_OVR1CFG9_GA_OFFSET)
+#define ATMEL_LCDC_OVRCHER	0x0000
+#define LCDC_OVRCHER_CHEN		(0x1 << 0)
+#define LCDC_OVRCHER_UPDATEEN		(0x1 << 1)
+#define LCDC_OVRCHER_A2QEN		(0x1 << 2)
+
+#define ATMEL_LCDC_OVRCHDR	0x0004
+#define LCDC_OVRCHDR_CHDIS		(0x1 << 0)
+#define LCDC_OVRCHDR_CHRST		(0x1 << 8)
+
+#define ATMEL_LCDC_OVRCHSR	0x0008
+#define LCDC_OVRCHSR_CHSR		(0x1 << 0)
+#define LCDC_OVRCHSR_UPDATESR		(0x1 << 1)
+#define LCDC_OVRCHSR_A2QSR		(0x1 << 2)
+
+#define ATMEL_LCDC_OVRIER	0x000C
+#define LCDC_OVRIER_DMA			(0x1 << 2)
+#define LCDC_OVRIER_DSCR		(0x1 << 3)
+#define LCDC_OVRIER_ADD			(0x1 << 4)
+#define LCDC_OVRIER_DONE		(0x1 << 5)
+#define LCDC_OVRIER_OVR			(0x1 << 6)
+
+#define ATMEL_LCDC_OVRIDR	0x0010
+#define LCDC_OVRIDR_DMA			(0x1 << 2)
+#define LCDC_OVRIDR_DSCR		(0x1 << 3)
+#define LCDC_OVRIDR_ADD			(0x1 << 4)
+#define LCDC_OVRIDR_DONE		(0x1 << 5)
+#define LCDC_OVRIDR_OVR			(0x1 << 6)
+
+#define ATMEL_LCDC_OVRIMR	0x0014
+#define LCDC_OVRIMR_DMA			(0x1 << 2)
+#define LCDC_OVRIMR_DSCR		(0x1 << 3)
+#define LCDC_OVRIMR_ADD			(0x1 << 4)
+#define LCDC_OVRIMR_DONE		(0x1 << 5)
+#define LCDC_OVRIMR_OVR			(0x1 << 6)
+
+#define ATMEL_LCDC_OVRISR	0x0018
+#define LCDC_OVRISR_DMA			(0x1 << 2)
+#define LCDC_OVRISR_DSCR		(0x1 << 3)
+#define LCDC_OVRISR_ADD			(0x1 << 4)
+#define LCDC_OVRISR_DONE		(0x1 << 5)
+#define LCDC_OVRISR_OVR			(0x1 << 6)
+
+#define ATMEL_LCDC_OVRHEAD	0x001C
+
+#define ATMEL_LCDC_OVRADDR	0x0020
+
+#define ATMEL_LCDC_OVRCTRL	0x0024
+#define LCDC_OVRCTRL_DFETCH		(0x1 << 0)
+#define LCDC_OVRCTRL_LFETCH		(0x1 << 1)
+#define LCDC_OVRCTRL_DMAIEN		(0x1 << 2)
+#define LCDC_OVRCTRL_DSCRIEN		(0x1 << 3)
+#define LCDC_OVRCTRL_ADDIEN		(0x1 << 4)
+#define LCDC_OVRCTRL_DONEIEN		(0x1 << 5)
+
+#define ATMEL_LCDC_OVRNEXT	0x0028
+
+#define ATMEL_LCDC_OVRCFG0	0x002C
+#define LCDC_OVRCFG0_SIF		(0x1 << 0)
+#define LCDC_OVRCFG0_BLEN_OFFSET	4
+#define LCDC_OVRCFG0_BLEN		(0x3 << LCDC_OVRCFG0_BLEN_OFFSET)
+#define		LCDC_OVRCFG0_BLEN_AHB_SINGLE		(0x0 << 4)
+#define		LCDC_OVRCFG0_BLEN_AHB_INCR4		(0x1 << 4)
+#define		LCDC_OVRCFG0_BLEN_AHB_INCR8		(0x2 << 4)
+#define		LCDC_OVRCFG0_BLEN_AHB_INCR16		(0x3 << 4)
+#define LCDC_OVRCFG0_DLBO		(0x1 << 8)
+#define LCDC_OVRCFG0_ROTDIS		(0x1 << 12)
+#define LCDC_OVRCFG0_LOCKDIS		(0x1 << 13)
+
+#define ATMEL_LCDC_OVRCFG1	0x0030
+#define LCDC_OVRCFG1_CLUTEN		(0x1 << 0)
+#define LCDC_OVRCFG1_RGBMODE_OFFSET	4
+#define LCDC_OVRCFG1_RGBMODE		(0xf << LCDC_OVRCFG1_RGBMODE_OFFSET)
+#define		LCDC_OVRCFG1_RGBMODE_12BPP_RGB_444	(0x0 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_16BPP_ARGB_4444	(0x1 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_16BPP_RGBA_4444	(0x2 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_16BPP_RGB_565	(0x3 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_16BPP_TRGB_1555	(0x4 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_18BPP_RGB_666	(0x5 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_18BPP_RGB_666_PACKED	(0x6 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_19BPP_TRGB_1666	(0x7 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_19BPP_TRGB_PACKED	(0x8 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_24BPP_RGB_888	(0x9 << 4)
+#define		LCDC_OVRCFG1_RGBMODE_24BPP_RGB_888_PACKED	(0xA << 4)
+#define		LCDC_OVRCFG1_RGBMODE_25BPP_TRGB_1888	(0xB << 4)
+#define		LCDC_OVRCFG1_RGBMODE_32BPP_ARGB_8888	(0xC << 4)
+#define		LCDC_OVRCFG1_RGBMODE_32BPP_RGBA_8888	(0xD << 4)
+#define LCDC_OVRCFG1_CLUTMODE_OFFSET	8
+#define LCDC_OVRCFG1_CLUTMODE		(0x3 << LCDC_OVRCFG1_CLUTMODE_OFFSET)
+#define		LCDC_OVRCFG1_CLUTMODE_1BPP		(0x0 << 8)
+#define		LCDC_OVRCFG1_CLUTMODE_2BPP		(0x1 << 8)
+#define		LCDC_OVRCFG1_CLUTMODE_4BPP		(0x2 << 8)
+#define		LCDC_OVRCFG1_CLUTMODE_8BPP		(0x3 << 8)
+
+#define ATMEL_LCDC_OVRCFG2	0x0034
+#define LCDC_OVRCFG2_XOFFSET_OFFSET	0
+#define LCDC_OVRCFG2_XOFFSET		(0x7ff << LCDC_OVRCFG2_XOFFSET_OFFSET)
+#define LCDC_OVRCFG2_YOFFSET_OFFSET	16
+#define LCDC_OVRCFG2_YOFFSET		(0x7ff << LCDC_OVRCFG2_YOFFSET_OFFSET)
+
+#define ATMEL_LCDC_OVRCFG3	0x0038
+#define LCDC_OVRCFG3_XSIZE_OFFSET	0
+#define LCDC_OVRCFG3_XSIZE		(0x7ff << LCDC_OVRCFG3_XSIZE_OFFSET)
+#define LCDC_OVRCFG3_YSIZE_OFFSET	16
+#define LCDC_OVRCFG3_YSIZE		(0x7ff << LCDC_OVRCFG3_YSIZE_OFFSET)
+
+#define ATMEL_LCDC_OVRCFG4	0x003C
+
+#define ATMEL_LCDC_OVRCFG5	0x0040
+
+#define ATMEL_LCDC_OVRCFG6	0x0044
+#define LCDC_OVRCFG6_BDEF_OFFSET	0
+#define LCDC_OVRCFG6_BDEF		(0xff << LCDC_OVRCFG6_BDEF_OFFSET)
+#define LCDC_OVRCFG6_GDEF_OFFSET	8
+#define LCDC_OVRCFG6_GDEF		(0xff << LCDC_OVRCFG6_GDEF_OFFSET)
+#define LCDC_OVRCFG6_RDEF_OFFSET	16
+#define LCDC_OVRCFG6_RDEF		(0xff << LCDC_OVRCFG6_RDEF_OFFSET)
+
+#define ATMEL_LCDC_OVRCFG7	0x0048
+#define LCDC_OVRCFG7_BKEY_OFFSET	0
+#define LCDC_OVRCFG7_BKEY		(0xff << LCDC_OVRCFG7_BKEY_OFFSET)
+#define LCDC_OVRCFG7_GKEY_OFFSET	8
+#define LCDC_OVRCFG7_GKEY		(0xff << LCDC_OVRCFG7_GKEY_OFFST)
+#define LCDC_OVRCFG7_RKEY_OFFSET	16
+#define LCDC_OVRCFG7_RKEY		(0xff << LCDC_OVRCFG7_RKEY_OFFSET)
+
+#define ATMEL_LCDC_OVRCFG8	0x004C
+#define LCDC_OVRCFG8_BMASK_OFFSET	0
+#define LCDC_OVRCFG8_BMASK		(0xff << LCDC_OVRCFG8_BMASK_OFFSET)
+#define LCDC_OVRCFG8_GMASK_OFFSET	8
+#define LCDC_OVRCFG8_GMASK		(0xff << LCDC_OVRCFG8_GMASK_OFFSET)
+#define LCDC_OVRCFG8_RMASK_OFFSET	16
+#define LCDC_OVRCFG8_RMASK		(0xff << LCDC_OVRCFG8_RMASK_OFFSET)
+
+#define ATMEL_LCDC_OVRCFG9	0x0050
+#define LCDC_OVRCFG9_CRKEY		(0x1 << 0)
+#define LCDC_OVRCFG9_INV		(0x1 << 1)
+#define LCDC_OVRCFG9_ITER2BL		(0x1 << 2)
+#define LCDC_OVRCFG9_ITER		(0x1 << 3)
+#define LCDC_OVRCFG9_REVALPHA		(0x1 << 4)
+#define LCDC_OVRCFG9_GAEN		(0x1 << 5)
+#define LCDC_OVRCFG9_LAEN		(0x1 << 6)
+#define LCDC_OVRCFG9_OVR		(0x1 << 7)
+#define LCDC_OVRCFG9_DMA		(0x1 << 8)
+#define LCDC_OVRCFG9_REP		(0x1 << 9)
+#define LCDC_OVRCFG9_DSTKEY		(0x1 << 10)
+#define LCDC_OVRCFG9_GA_OFFSET		16
+#define LCDC_OVRCFG9_GA			(0xff << LCDC_OVRCFG9_GA_OFFSET)
 
 #endif /* __MACH_ATMEL_HLCD_OVL_H__ */
diff --git a/drivers/video/atmel_hlcdfb.c b/drivers/video/atmel_hlcdfb.c
index 262c15b..7c87f88 100644
--- a/drivers/video/atmel_hlcdfb.c
+++ b/drivers/video/atmel_hlcdfb.c
@@ -84,14 +84,14 @@ static void atmel_hlcdfb_update_dma_ovl(struct fb_info *info,
 
 	desc->address = dma_addr;
 	/* Disable DMA transfer interrupt & descriptor loaded interrupt. */
-	desc->control = LCDC_OVRCTRL1_ADDIEN | LCDC_OVRCTRL1_DSCRIEN
-			| LCDC_OVRCTRL1_DMAIEN | LCDC_OVRCTRL1_DFETCH;
+	desc->control = LCDC_OVRCTRL_ADDIEN | LCDC_OVRCTRL_DSCRIEN
+			| LCDC_OVRCTRL_DMAIEN | LCDC_OVRCTRL_DFETCH;
 	desc->next = sinfo->dma_desc_phys;
 
-	lcdc_writel(sinfo, ATMEL_LCDC_OVRADDR1, dma_addr);
-	lcdc_writel(sinfo, ATMEL_LCDC_OVRCTRL1, desc->control);
-	lcdc_writel(sinfo, ATMEL_LCDC_OVRNEXT1, sinfo->dma_desc_phys);
-	lcdc_writel(sinfo, ATMEL_LCDC_OVRCHER1, LCDC_OVRCHER1_CHEN | LCDC_OVRCHER1_UPDATEEN);
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRADDR, dma_addr);
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRCTRL, desc->control);
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRNEXT, sinfo->dma_desc_phys);
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRCHER, LCDC_OVRCHER_CHEN | LCDC_OVRCHER_UPDATEEN);
 }
 
 #if defined(CONFIG_BACKLIGHT_ATMEL_LCDC)
@@ -345,26 +345,26 @@ static int atmel_hlcdfb_setup_core_ovl(struct fb_info *info)
 		ypos = info->var.nonstd & 0x3ff;
 		xres = info->var.xres ? info->var.xres - 1 : 0;
 		yres = info->var.yres ? info->var.yres - 1 : 0;
-		cfg9 =  LCDC_OVR1CFG9_DMA | LCDC_OVR1CFG9_OVR |
-			LCDC_OVR1CFG9_ITER | LCDC_OVR1CFG9_ITER2BL |
-			LCDC_OVR1CFG9_REP;
+		cfg9 =  LCDC_OVRCFG9_DMA | LCDC_OVRCFG9_OVR |
+			LCDC_OVRCFG9_ITER | LCDC_OVRCFG9_ITER2BL |
+			LCDC_OVRCFG9_REP;
 		if (info->var.transp.offset)
-			cfg9 |= LCDC_OVR1CFG9_LAEN;
+			cfg9 |= LCDC_OVRCFG9_LAEN;
 		else
-			cfg9 |= LCDC_OVR1CFG9_GAEN | LCDC_OVR1CFG9_GA;
+			cfg9 |= LCDC_OVRCFG9_GAEN | LCDC_OVRCFG9_GA;
 	} else {
 		xpos = ypos = yres = xres = cfg9 = 0;
 	}
 
-	lcdc_writel(sinfo, ATMEL_LCDC_OVR1CFG0,
-			LCDC_OVR1CFG0_BLEN_AHB_INCR4 | LCDC_OVR1CFG0_DLBO);
-	lcdc_writel(sinfo, ATMEL_LCDC_OVR1CFG1,
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRCFG0,
+			LCDC_OVRCFG0_BLEN_AHB_INCR4 | LCDC_OVRCFG0_DLBO);
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRCFG1,
 			atmel_hlcdfb_get_rgbmode(info));
-	lcdc_writel(sinfo, ATMEL_LCDC_OVR1CFG2, xpos |
-			(ypos << LCDC_OVR1CFG2_YOFFSET_OFFSET));
-	lcdc_writel(sinfo, ATMEL_LCDC_OVR1CFG3, xres |
-			(yres << LCDC_OVR1CFG3_YSIZE_OFFSET));
-	lcdc_writel(sinfo, ATMEL_LCDC_OVR1CFG9, cfg9);
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRCFG2, xpos |
+			(ypos << LCDC_OVRCFG2_YOFFSET_OFFSET));
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRCFG3, xres |
+			(yres << LCDC_OVRCFG3_YSIZE_OFFSET));
+	lcdc_writel(sinfo, ATMEL_LCDC_OVRCFG9, cfg9);
 
 	return 0;
 }
@@ -492,7 +492,8 @@ static struct atmel_lcdfb_devdata dev_data_ovl = {
 
 static const struct platform_device_id atmelfb_dev_table[] = {
 	{ "atmel_hlcdfb_base", (kernel_ulong_t)&dev_data_base },
-	{ "atmel_hlcdfb_ovl", (kernel_ulong_t)&dev_data_ovl },
+	{ "atmel_hlcdfb_ovl1", (kernel_ulong_t)&dev_data_ovl },
+	{ "atmel_hlcdfb_ovl2", (kernel_ulong_t)&dev_data_ovl },
 }
 MODULE_DEVICE_TABLE(platform, atmelfb_dev_table);
 
-- 
1.7.10.4

