From 2f33d5da1a975218af55214bb66f252c7cd0386d Mon Sep 17 00:00:00 2001
From: Wenyou Yang <wenyou.yang@atmel.com>
Date: Tue, 25 Sep 2012 16:31:01 +0800
Subject: [PATCH 140/319] spi: atmel: add support to read dt property for DMA
 configuration

Signed-off-by: Wenyou Yang <wenyou.yang@atmel.com>
---
 drivers/spi/spi-atmel.c |   56 ++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 55 insertions(+), 1 deletion(-)

diff --git a/drivers/spi/spi-atmel.c b/drivers/spi/spi-atmel.c
index 05472fd..251fa0b 100644
--- a/drivers/spi/spi-atmel.c
+++ b/drivers/spi/spi-atmel.c
@@ -21,6 +21,7 @@
 #include <linux/spi/spi.h>
 #include <linux/slab.h>
 #include <linux/of.h>
+#include <linux/of_platform.h>
 
 #include <asm/io.h>
 #include <mach/board.h>
@@ -1547,6 +1548,57 @@ static struct atmel_spi_pdata * __devinit atmel_spi_get_driver_data(
 			platform_get_device_id(pdev)->driver_data;
 }
 
+static int at91_spi_dma_of_init(struct device_node *np,
+			struct at_dma_slave *atslave)
+{
+	struct of_phandle_args  dma_spec;
+	struct device_node      *dmac_np;
+	struct platform_device  *dmac_pdev;
+	const __be32            *nbcells;
+	int                     ret;
+
+	ret = of_parse_phandle_with_args(np, "dma", "#dma-cells", 0, &dma_spec);
+	if (ret || !dma_spec.np) {
+		pr_err("%s: can't parse dma property (%d)\n",
+						np->full_name, ret);
+		goto err0;
+	}
+	dmac_np = dma_spec.np;
+
+	/* check property format */
+	nbcells = of_get_property(dmac_np, "#dma-cells", NULL);
+	if (!nbcells) {
+		pr_err("%s: #dma-cells property is required\n", np->full_name);
+		ret = -EINVAL;
+		goto err1;
+	}
+
+	if (dma_spec.args_count != be32_to_cpup(nbcells)
+			|| dma_spec.args_count != 1) {
+		pr_err("%s: wrong #dma-cells for %s\n",
+				np->full_name, dmac_np->full_name);
+		ret = -EINVAL;
+		goto err1;
+	}
+
+	dmac_pdev = of_find_device_by_node(dmac_np);
+	if (!dmac_pdev) {
+		pr_err("%s: unable to find pdev from DMA controller\n",
+				dmac_np->full_name);
+		ret = -EINVAL;
+		goto err1;
+	}
+
+	atslave->dma_dev = &dmac_pdev->dev;
+	atslave->cfg = dma_spec.args[0];
+
+err1:
+	of_node_put(dma_spec.np);
+err0:
+	pr_debug("%s exited with status %d\n", __func__, ret);
+	return ret;
+}
+
 /*-------------------------------------------------------------------------*/
 
 static int __devinit atmel_spi_probe(struct platform_device *pdev)
@@ -1629,7 +1681,9 @@ static int __devinit atmel_spi_probe(struct platform_device *pdev)
 	as->use_pdc = false;
 
 	if (as->pdata->has_dma_support) {
-		if (atmel_spi_configure_dma(as) == 0)
+		if ((!at91_spi_dma_of_init(pdev->dev.of_node,
+					&as->pdata->dma_slave))
+			&& (atmel_spi_configure_dma(as) == 0))
 			as->use_dma = true;
 	} else
 		as->use_pdc = true;
-- 
1.7.10.4

